plugins {
	id 'java'
	id 'org.springframework.boot' version '3.0.4'
	id 'io.spring.dependency-management' version '1.1.0'
	id "idea"
	id 'groovy'
}

group = 'com.xrplsystem'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

sourceSets {
	integrationTest {
		compileClasspath += sourceSets.main.output + test.output
		runtimeClasspath += sourceSets.main.output + test.output
		groovy {
			srcDirs = ['src/integrationTest/groovy']
		}
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
	integrationTestImplementation.extendsFrom implementation
	integrationTestRuntimeOnly.extendsFrom runtimeOnly
	integrationTestImplementation.extendsFrom testImplementation
}

idea {
	module {
		testSources.from(sourceSets.integrationTest.groovy.srcDirs)
	}
}

repositories {
	mavenCentral()
}

ext {
	mapstructVersion = "1.5.5.Final"
	lombokVersion = "1.18.26"
	lombokMapStructBindingVersion = "0.2.0"
	xrpl4jVersion = "3.0.1"
	postgresql = "42.6.0"
	springBootStarterVersion = "3.0.5"
	immutablesVersion = "2.9.3"
	spockVersion = "2.4-M1-groovy-4.0"
	webFluxVersion = "6.0.10"
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation "org.mapstruct:mapstruct:${mapstructVersion}"
	implementation "org.postgresql:postgresql:${postgresql}"
	implementation "org.springframework.boot:spring-boot-starter-data-jpa:${springBootStarterVersion}"
	implementation "org.springframework.boot:spring-boot-starter-validation:${springBootStarterVersion}"
	implementation "org.springframework:spring-webflux:${webFluxVersion}"

	compileOnly "org.immutables:value:${immutablesVersion}"
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"
	annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"
	annotationProcessor "org.projectlombok:lombok:${lombokVersion}"
	annotationProcessor "org.projectlombok:lombok-mapstruct-binding:${lombokMapStructBindingVersion}"
	
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation "org.spockframework:spock-core:${spockVersion}"
	testImplementation "org.spockframework:spock-spring:${spockVersion}"
}

tasks.named('test') {
	useJUnitPlatform()
}

tasks.register("integrationTest", Test) {
	description = 'Run integration tests.'
	group = 'verification'

	testClassesDirs = sourceSets.integrationTest.output.classesDirs
	classpath = sourceSets.integrationTest.runtimeClasspath
	shouldRunAfter test

	useJUnitPlatform()

	testLogging {
		events "passed"
	}
}

tasks.named('check') {
	dependsOn tasks.named('integrationTest')
}
